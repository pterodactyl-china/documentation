import{_ as h}from"./wings_configuration_example-CiiF11xE.js";import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as r,f as a,g as e,j as i,h as t,i as l,r as d,o as k}from"./app-D-Jeu5AB.js";const o={};function c(g,s){const n=d("RouteLink");return k(),r("div",null,[s[6]||(s[6]=a("h1",{id:"迁移至-wings",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#迁移至-wings"},[a("span",null,"迁移至 Wings")])],-1)),a("p",null,[s[1]||(s[1]=i("本指南适用于希望从旧的 Node.JS 守护程序迁移到 Wings 的人。如果您是第一次尝试在新节点上安装 Wings，请参阅 ")),t(n,{to:"/wings/1.0/installing.html"},{default:l(()=>s[0]||(s[0]=[i("安装指南")])),_:1}),s[2]||(s[2]=i(" 。"))]),s[7]||(s[7]=e(`<div class="hint-container caution"><p class="hint-container-title">面板版本要求</p><p>您<strong>必须</strong>运行翼龙面板 1.X 及以上版本才能使用 Wings。</p></div><p>执行此过程时，您将有一段短暂的离线时间，但不会影响正在运行的游戏进程。此外，在此期间，您的面板可能会离线（或处于维护模式），因此您的用户不会触发任何异常情况。</p><h2 id="安装-wings" tabindex="-1"><a class="header-anchor" href="#安装-wings"><span>安装 Wings</span></a></h2><p>安装守护程序的第一步是确保我们具有所需的目录结构设置。为此，请运行以下命令，该命令将创建基本目录并下载 Wings 可执行文件。</p><p>::: code-tabs#shell</p><p>@tab 国际源</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/pterodactyl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/wings</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://github.com/pterodactyl-china/wings/releases/latest/download/wings_linux_$([[ &quot;$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;x86_64&quot; ]] &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;amd64&quot; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">||</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;arm64&quot;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> u+x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/wings</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@tab:active 国内源</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/pterodactyl</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/wings</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://ghfast.top/https://github.com/pterodactyl-china/wings/releases/latest/download/wings_linux_$([[ &quot;$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;x86_64&quot; ]] &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;amd64&quot; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">||</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;arm64&quot;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> u+x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/wings</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><h2 id="复制新的配置文件" tabindex="-1"><a class="header-anchor" href="#复制新的配置文件"><span>复制新的配置文件</span></a></h2><p>安装 Wings 后，您需要从面板中复制一个新的配置文件。此文件采用新格式，将来应该更易于管理和编辑。</p><p>只需复制代码块的内容并将其粘贴到 <code>/etc/pterodactyl</code> 目录中的 <code>config.yml</code> 文件里。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当然，你也可以直接点击 [生成自动部署指令] 来生成一件命令覆盖，而不需要您手动覆盖。(请注意，此覆盖只会覆盖默认的 <code>/etc/pterodactyl</code> 目录下的配置文件)</p></div><p><img src="`+h+`" alt=""></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>请注意，你以前对配置所做的任何修改都会随之丢失。如果你对我们的默认设置有修改，最好的选择是使用面板生成的配置启动一次 Wings，然后再此基础上写入额外的配置设置。</p><p>从那里您可以根据需要进行任何调整。</p></div><h2 id="移除旧的守护进程" tabindex="-1"><a class="header-anchor" href="#移除旧的守护进程"><span>移除旧的守护进程</span></a></h2><p>现在安装了 Wings，我们需要从服务器中删除所有旧的守护程序代码，因为它不再被使用。为此，只需执行以下命令 - 假设您的旧守护程序路径默认于 <code>/srv/daemon</code> 目录中。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止旧的守护程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wings</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除整个目录。这里没有任何我们在这次迁移中实际需要的东西。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 请记住，服务器数据默认存储在 /srv/daemon-data 中，如果你没做修改。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /srv/daemon</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果没有对 NodeJS 有其他用途，您可以选择从你的系统中删除它。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nodejs</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 或: yum remove nodejs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除独立-sftp" tabindex="-1"><a class="header-anchor" href="#删除独立-sftp"><span>删除独立 SFTP</span></a></h3>`,20)),a("p",null,[s[4]||(s[4]=i("如果您使用带有旧守护程序的 ")),t(n,{to:"/daemon/0.6/standalone_sftp.html"},{default:l(()=>s[3]||(s[3]=[i("独立SFTP服务器")])),_:1}),s[5]||(s[5]=i(" ，我们不再需要它的 systemd 服务,所以我们需要删除它。 您可以使用以下命令执行此操作。"))]),s[8]||(s[8]=e(`<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止并禁用独立 sftp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> disable</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --now</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pterosftp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除 systemd 服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/systemd/system/pterosftp.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="wings-守护进程" tabindex="-1"><a class="header-anchor" href="#wings-守护进程"><span>Wings 守护进程</span></a></h2><p>然后，您需要编辑现有 <code>systemd</code> 的 Wings 服务文件以指向新的控制软件。为此，请打开 <code>/etc/systemd/system/wings.service</code> 文件并将其中的全部内容替换为以下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=Pterodactyl Wings Daemon</span></span>
<span class="line"><span>After=docker.service</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>User=root</span></span>
<span class="line"><span>WorkingDirectory=/etc/pterodactyl</span></span>
<span class="line"><span>LimitNOFILE=4096</span></span>
<span class="line"><span>PIDFile=/var/run/wings/daemon.pid</span></span>
<span class="line"><span>ExecStart=/usr/local/bin/wings</span></span>
<span class="line"><span>Restart=on-failure</span></span>
<span class="line"><span>StartLimitInterval=600</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，启动 Wings。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>systemctl daemon-reload</span></span>
<span class="line"><span>systemctl enable --now wings</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">如果 Wings 没有启动怎么办？</p><p>如果此时您在启动 Wings 时遇到问题，请运行以下命令直接启动 Wings 并检查是否有任何特定的错误输出。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sudo wings --debug</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div>`,7))])}const v=p(o,[["render",c],["__file","migrating.html.vue"]]),y=JSON.parse('{"path":"/wings/1.0/migrating.html","title":"迁移至 Wings","lang":"zh-CN","frontmatter":{"description":"迁移至 Wings 本指南适用于希望从旧的 Node.JS 守护程序迁移到 Wings 的人。如果您是第一次尝试在新节点上安装 Wings，请参阅 。 面板版本要求 您必须运行翼龙面板 1.X 及以上版本才能使用 Wings。 执行此过程时，您将有一段短暂的离线时间，但不会影响正在运行的游戏进程。此外，在此期间，您的面板可能会离线（或处于维护模式），因...","head":[["meta",{"property":"og:url","content":"https://pterodactyl.top/wings/1.0/migrating.html"}],["meta",{"property":"og:site_name","content":"Pterodactyl-China"}],["meta",{"property":"og:title","content":"迁移至 Wings"}],["meta",{"property":"og:description","content":"迁移至 Wings 本指南适用于希望从旧的 Node.JS 守护程序迁移到 Wings 的人。如果您是第一次尝试在新节点上安装 Wings，请参阅 。 面板版本要求 您必须运行翼龙面板 1.X 及以上版本才能使用 Wings。 执行此过程时，您将有一段短暂的离线时间，但不会影响正在运行的游戏进程。此外，在此期间，您的面板可能会离线（或处于维护模式），因..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-12T15:49:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-12T15:49:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"迁移至 Wings\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-12T15:49:53.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1598749007000,"updatedTime":1736696993000,"contributors":[{"name":"Dane Everitt","username":"Dane Everitt","email":"dane@daneeveritt.com","commits":16,"url":"https://github.com/Dane Everitt"},{"name":"Jakob","username":"Jakob","email":"dev@schrej.net","commits":2,"url":"https://github.com/Jakob"},{"name":"Charles Morgan","username":"Charles Morgan","email":"sir3lit@gmail.com","commits":1,"url":"https://github.com/Charles Morgan"},{"name":"Omar Kamel","username":"Omar Kamel","email":"30291302+TekExplorer@users.noreply.github.com","commits":1,"url":"https://github.com/Omar Kamel"},{"name":"Angel Knutsen Aune","username":"Angel Knutsen Aune","email":"djangel@live.no","commits":1,"url":"https://github.com/Angel Knutsen Aune"},{"name":"BLTeam","username":"BLTeam","email":"79665752+ebteam-csgo@users.noreply.github.com","commits":1,"url":"https://github.com/BLTeam"},{"name":"飒爽师叔","username":"飒爽师叔","email":"43847794+vlssu@users.noreply.github.com","commits":12,"url":"https://github.com/飒爽师叔"},{"name":"Jack","username":"Jack","email":"55438332+InfinityJxck@users.noreply.github.com","commits":1,"url":"https://github.com/Jack"}]},"readingTime":{"minutes":2.94,"words":881},"filePathRelative":"wings/1.0/migrating.md","localizedDate":"2020年8月30日","autoDesc":true}');export{v as comp,y as data};
