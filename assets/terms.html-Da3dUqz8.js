import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as r,g as a,o}from"./app-CezBk04F.js";const n="/assets/simple_setup_diagram-CGNcunII.png",s="/assets/example_setup-DSUPdyln.png",i={};function p(c,e){return o(),r("div",null,e[0]||(e[0]=[a('<h1 id="术语" tabindex="-1"><a class="header-anchor" href="#术语"><span>术语</span></a></h1><p><strong>面板(Panel)</strong> — 这指的是翼龙面板本身，它允许您向系统添加额外的节点和服务器。</p><p><strong>节点(Node)</strong> — 节点是运行 Wings 实例的物理主机。</p><p><strong>Wings</strong> — 用 Go 编写的新服务软件，它与 Docker 和面板交互，让面板控制服务器时提供安全访问。</p><p><strong>服务器(Server)</strong> — 在这种情况下，服务器是指由面板创建的正在运行的实例。这些服务器是在节点上创建的，您可以在每个节点上拥有多个服务器。</p><p><strong>Docker</strong> — Docker 是一个平台，可让您将应用程序与基础设施分离到隔离的安全容器中。</p><p><strong>Docker镜像(Docker Image)</strong> — 一个 Docker 镜像包含运行容器化应用程序所需的一切。 （例如用于 Minecraft 服务器的 Java）。</p><p><strong>容器(Container)</strong> — 每台服务器都将在一个隔离的容器内运行，以强制执行硬件限制（例如 CPU 和 RAM）并避免一个节点上的服务器之间产生任何干扰。这些都将由 Docker 创建。</p><p><strong>预设组(Nest)</strong> — 每个预设组通常用作特定的游戏或服务，例如：Minecraft、Teamspeak 或 Terraria，并且可以包含许多预设。</p><p><strong>预设(Egg)</strong> — 每个预设通常用于存储特定类型的游戏配置，例如：Minecraft 的 Vanilla、Spigot 或 Bungeecord。</p><p><strong>Yolks</strong> — 可与翼龙的预设一起使用的 Docker 镜像，部分内容可能高度定制。</p><h2 id="简单设置示意图" tabindex="-1"><a class="header-anchor" href="#简单设置示意图"><span>简单设置示意图</span></a></h2><p><img src="'+n+'" alt=""></p><h2 id="高级设置示意图" tabindex="-1"><a class="header-anchor" href="#高级设置示意图"><span>高级设置示意图</span></a></h2><div class="hint-container tip"><p class="hint-container-title">面板和 Wings 在同一台主机上</p><p>也可以在面板主机上安装 Wings，使其同时充当面板和节点的主机。</p></div><p><img src="'+s+'" alt=""></p>',16)]))}const g=t(i,[["render",p],["__file","terms.html.vue"]]),h=JSON.parse('{"path":"/project/terms.html","title":"术语","lang":"zh-CN","frontmatter":{"description":"术语 面板(Panel) — 这指的是翼龙面板本身，它允许您向系统添加额外的节点和服务器。 节点(Node) — 节点是运行 Wings 实例的物理主机。 Wings — 用 Go 编写的新服务软件，它与 Docker 和面板交互，让面板控制服务器时提供安全访问。 服务器(Server) — 在这种情况下，服务器是指由面板创建的正在运行的实例。这些服务...","head":[["meta",{"property":"og:url","content":"https://pterodactyl.top/project/terms.html"}],["meta",{"property":"og:site_name","content":"Pterodactyl-China"}],["meta",{"property":"og:title","content":"术语"}],["meta",{"property":"og:description","content":"术语 面板(Panel) — 这指的是翼龙面板本身，它允许您向系统添加额外的节点和服务器。 节点(Node) — 节点是运行 Wings 实例的物理主机。 Wings — 用 Go 编写的新服务软件，它与 Docker 和面板交互，让面板控制服务器时提供安全访问。 服务器(Server) — 在这种情况下，服务器是指由面板创建的正在运行的实例。这些服务..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-17T01:58:58.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-17T01:58:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"术语\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-17T01:58:58.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1532407839000,"updatedTime":1660701538000,"contributors":[{"name":"Dane Everitt","username":"Dane Everitt","email":"dane@daneeveritt.com","commits":3,"url":"https://github.com/Dane Everitt"},{"name":"Nick","username":"Nick","email":"nick@nick-e.co.uk","commits":1,"url":"https://github.com/Nick"},{"name":"Raikas","username":"Raikas","email":"fanipostiraikas@gmail.com","commits":1,"url":"https://github.com/Raikas"},{"name":"Boy132","username":"Boy132","email":"Boy132@users.noreply.github.com","commits":2,"url":"https://github.com/Boy132"},{"name":"Shadowhacker","username":"Shadowhacker","email":"luksikladislav@gmail.com","commits":1,"url":"https://github.com/Shadowhacker"},{"name":"飒爽师叔","username":"飒爽师叔","email":"43847794+vlssu@users.noreply.github.com","commits":1,"url":"https://github.com/飒爽师叔"}]},"readingTime":{"minutes":1.39,"words":417},"filePathRelative":"project/terms.md","localizedDate":"2018年7月24日","autoDesc":true}');export{g as comp,h as data};
