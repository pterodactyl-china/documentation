import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as t,g as e,f as i,j as s,o as h}from"./app-DCIACnhC.js";const l={};function r(o,a){return h(),t("div",null,a[0]||(a[0]=[e(`<h1 id="创建自定义-docker-镜像" tabindex="-1"><a class="header-anchor" href="#创建自定义-docker-镜像"><span>创建自定义 Docker 镜像</span></a></h1><div class="hint-container warning"><p class="hint-container-title">注意</p><p>This tutorial uses examples from our <a href="https://github.com/pterodactyl/images/tree/java" target="_blank" rel="noopener noreferrer"><code>core:java</code></a> docker image, which can be found on GitHub. This tutorial also assumes some knowledge of <a href="https://docker.io/" target="_blank" rel="noopener noreferrer">Docker</a>, we suggest reading up if this all looks foreign to you.</p></div><h2 id="creating-the-dockerfile" tabindex="-1"><a class="header-anchor" href="#creating-the-dockerfile"><span>Creating the Dockerfile</span></a></h2><p>The most important part of this process is to create the <a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener noreferrer"><code>Dockerfile</code></a> that will be used by the Daemon. Due to heavy restrictions on server containers, you must setup this file in a specific manner.</p><p>We try to make use of <a href="https://alpinelinux.org" target="_blank" rel="noopener noreferrer">Alpine Linux</a> as much as possible for our images in order to keep their size down.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ----------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Pterodactyl Core Dockerfile</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Environment: Java</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Minimum Panel Version: 0.6.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ----------------------------------</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openjdk:8-jdk-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MAINTAINER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pterodactyl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Software,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">support@pterodactyl.i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">o&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-cache</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ca-certificates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sqlite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fontconfig</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adduser</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --disabled-password</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --home</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">USER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENV</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  USER=container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HOME=/home/container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./entrypoint.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /entrypoint.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/bin/bash&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/entrypoint.sh&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lets walk through the <code>Dockerfile</code> above. The first thing you&#39;ll notice is the <a href="https://docs.docker.com/engine/reference/builder/#from" target="_blank" rel="noopener noreferrer"><code>FROM</code></a> declaration.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openjdk:8-jdk-alpine</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>In this case, we are using <a href="https://github.com/docker-library/openjdk" target="_blank" rel="noopener noreferrer"><code>openjdk:8-jdk-alpine</code></a> which provides us with Java 8.</p><h2 id="installing-dependencies" tabindex="-1"><a class="header-anchor" href="#installing-dependencies"><span>Installing Dependencies</span></a></h2><p>The next thing we do is install the dependencies we will need using Alpine&#39;s package manager: <code>apk</code>. You&#39;ll notice some specific flags that keep the container small, including <code>--no-cache</code>, as well as everything being contained in a single <a href="https://docs.docker.com/engine/reference/builder/#run" target="_blank" rel="noopener noreferrer"><code>RUN</code></a> block.</p><h2 id="creating-a-container-user" tabindex="-1"><a class="header-anchor" href="#creating-a-container-user"><span>Creating a Container User</span></a></h2><p>Within this <code>RUN</code> block, you&#39;ll notice the <code>useradd</code> command.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adduser</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>All Pterodactyl containers must have a user named <code>container</code>, and the user home <strong>must</strong> be <code>/home/container</code>.</p></div><p>After we create that user, we then define the default container <a href="https://docs.docker.com/engine/reference/builder/#user" target="_blank" rel="noopener noreferrer"><code>USER</code></a> as well as a few <a href="https://docs.docker.com/engine/reference/builder/#env" target="_blank" rel="noopener noreferrer"><code>ENV</code></a> settings to be applied to things running within the container.</p><h2 id="work-directory-entrypoint" tabindex="-1"><a class="header-anchor" href="#work-directory-entrypoint"><span>Work Directory &amp; Entrypoint</span></a></h2><p>One of the last things we do is define a <a href="https://docs.docker.com/engine/reference/builder/#workdir" target="_blank" rel="noopener noreferrer"><code>WORKDIR</code></a> which is where everything else will be executed. The <code>WORKDIR</code> must be set the <code>/home/container</code>.</p><p>Finally, we need to copy our <a href="https://docs.docker.com/engine/reference/builder/#entrypoint" target="_blank" rel="noopener noreferrer"><code>ENTRYPOINT</code></a> script into the docker image root. This is done using <a href="https://docs.docker.com/engine/reference/builder/#copy" target="_blank" rel="noopener noreferrer"><code>COPY</code></a>, after which we define the command to be used when the container is started using <a href="https://docs.docker.com/engine/reference/builder/#cmd" target="_blank" rel="noopener noreferrer"><code>CMD</code></a>. The <code>CMD</code> line should always point to the <code>entrypoint.sh</code> file.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./entrypoint.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /entrypoint.sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/bin/bash&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/entrypoint.sh&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="entrypoint-script" tabindex="-1"><a class="header-anchor" href="#entrypoint-script"><span>Entrypoint Script</span></a></h2><p>In order to complete this <code>Dockerfile</code>, we will need an <code>entrypoint.sh</code> file which tells Docker how to run this specific server type.</p><p>These entrypoint files are actually fairly abstracted, and the Daemon will pass in the start command as an environment variable before processing it and then executing the command.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /home/container</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Output Current Java Version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> ## only really needed to show what version is being used. Should be changed for different applications</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Replace Startup Variables</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MODIFIED_STARTUP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">eval</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">STARTUP</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s/{{/\${/g&#39; -e &#39;s/}}/}/g&#39;)\`</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;:/home/container$ </span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MODIFIED_STARTUP</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Run the Server</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MODIFIED_STARTUP</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The second command, <code>cd /home/container</code>, simply ensures we are in the correct directory when running the rest of the commands. We then follow that up with <code>java -version</code> to output this information to end-users, but that is not necessary.</p><h2 id="modifying-the-startup-command" tabindex="-1"><a class="header-anchor" href="#modifying-the-startup-command"><span>Modifying the Startup Command</span></a></h2><p>The most significant part of this file is the <code>MODIFIED_STARTUP</code> environment variable. What we are doing in this case is parsing the environment <code>STARTUP</code> that is passed into the container by the Daemon. In most cases, this variable looks something like the example below:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">STARTUP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar {{SERVER_JARFILE}}&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,28),i("div",null,[i("p",null,[s("You'll notice some placeholders there, specifically "),i("code",{"v-pre":""},"{{SERVER_MEMORY}}"),s(" and "),i("code",{"v-pre":""},"{{SERVER_JARFILE}}"),s(". These both refer to other environment variables being passed in, and they look something like the example below.")])],-1),e('<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SERVER_MEMORY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1024</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SERVER_JARFILE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">server.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>There are a host of different environment variables, and they change depending on the specific service option configuration. However, that is not necessarily anything to worry about here.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MODIFIED_STARTUP</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">eval</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> echo $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;"> ${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">STARTUP</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s/{{/${/g&#39; -e &#39;s/}}/}/g&#39;)`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',3),i("div",null,[i("p",null,[s("The command above simply evaluates the "),i("code",{"v-pre":""},"STARTUP"),s(" environment variable, and then replaces anything surrounded in curly braces "),i("code",{"v-pre":""},"{{EXAMPLE}}"),s(" with a matching environment variable (such as "),i("code",{"v-pre":""},"EXAMPLE"),s("). Thus, our "),i("code",{"v-pre":""},"STARTUP"),s(" command:")])],-1),e('<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Xms128M</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Xmx{{SERVER_MEMORY}}M</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {{SERVER_JARFILE}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Becomes:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Xms128M</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Xmx1024M</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="run-the-command" tabindex="-1"><a class="header-anchor" href="#run-the-command"><span>Run the Command</span></a></h2><p>The last step is to run this modified startup command, which is done with the line <code>${MODIFIED_STARTUP}</code>.</p><h3 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>Note</span></a></h3><p>Sometimes you may need to change the permissions of the <code>entrypoint.sh</code> file, on linux you can do this by executing <code>chmod +x entrypoint.sh</code> in the directory where the file is.</p>',7)]))}const k=n(l,[["render",r],["__file","creating_a_custom_image.html.vue"]]),c=JSON.parse('{"path":"/community/config/eggs/creating_a_custom_image.html","title":"创建自定义 Docker 镜像","lang":"zh-CN","frontmatter":{"description":"创建自定义 Docker 镜像 注意 This tutorial uses examples from our core:java docker image, which can be found on GitHub. This tutorial also assumes some knowledge of Docker, we suggest rea...","head":[["meta",{"property":"og:url","content":"https://pterodactyl.top/community/config/eggs/creating_a_custom_image.html"}],["meta",{"property":"og:site_name","content":"Pterodactyl-China"}],["meta",{"property":"og:title","content":"创建自定义 Docker 镜像"}],["meta",{"property":"og:description","content":"创建自定义 Docker 镜像 注意 This tutorial uses examples from our core:java docker image, which can be found on GitHub. This tutorial also assumes some knowledge of Docker, we suggest rea..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-10T06:15:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-10T06:15:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建自定义 Docker 镜像\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-10T06:15:03.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1548912913000,"updatedTime":1715321703000,"contributors":[{"name":"Michael (Parker) Parker","username":"Michael (Parker) Parker","email":"parkervcp@gmail.com","commits":1,"url":"https://github.com/Michael (Parker) Parker"},{"name":"Dane Everitt","username":"Dane Everitt","email":"dane@daneeveritt.com","commits":2,"url":"https://github.com/Dane Everitt"},{"name":"LoYungSum","username":"LoYungSum","email":"sumsum_2003@yahoo.com.hk","commits":1,"url":"https://github.com/LoYungSum"},{"name":"Jpac14","username":"Jpac14","email":"45907459+Jpac14@users.noreply.github.com","commits":1,"url":"https://github.com/Jpac14"},{"name":"William Gladstone","username":"William Gladstone","email":"will.gl@dst.one","commits":1,"url":"https://github.com/William Gladstone"},{"name":"Vukašin Lekić","username":"Vukašin Lekić","email":"goksi1312@gmail.com","commits":1,"url":"https://github.com/Vukašin Lekić"},{"name":"softwarenoob","username":"softwarenoob","email":"admin@softwarenoob.com","commits":1,"url":"https://github.com/softwarenoob"},{"name":"飒爽师叔","username":"飒爽师叔","email":"43847794+vlssu@users.noreply.github.com","commits":2,"url":"https://github.com/飒爽师叔"}]},"readingTime":{"minutes":2.68,"words":804},"filePathRelative":"community/config/eggs/creating_a_custom_image.md","localizedDate":"2019年1月31日","autoDesc":true}');export{k as comp,c as data};
