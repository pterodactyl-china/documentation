import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as o,g as e,f as i,j as s,h as r,i as l,r as p,o as d}from"./app-DCIACnhC.js";const g={};function h(c,t){const n=p("RouteLink");return d(),o("div",null,[t[7]||(t[7]=e('<h1 id="服务器间迁移" tabindex="-1"><a class="header-anchor" href="#服务器间迁移"><span>服务器间迁移</span></a></h1><h2 id="面板迁移" tabindex="-1"><a class="header-anchor" href="#面板迁移"><span>面板迁移</span></a></h2><p>对于面板来说，没有那么多步骤及要求。</p><p>按照<a href="/panel/1.0/getting_started">官方安装文档</a>在新的服务器中安装全新面板后，按照以下步骤。</p><ol><li>数据库迁移</li></ol><p>你只需要将你<strong>源服务器</strong>中的 MySQL 数据库导出，导入到<strong>目标服务器</strong>的数据库中，当然，如果你是外置数据库那就不需要了，具体情况看你。<br> 需要注意的是<strong>目标服务器</strong>数据库版本要大于等于<strong>源服务器</strong>的数据库版本。</p><ol start="2"><li><code>.env</code> 文件迁移</li></ol><p>将<strong>源服务器</strong> <code>.env</code> 中的 <code>APP_KEY</code> 值复制下来，替换到<strong>目标服务器</strong>中的 <code>.env</code> 里即可。</p><h2 id="wings-后端-迁移" tabindex="-1"><a class="header-anchor" href="#wings-后端-迁移"><span>Wings (后端)迁移</span></a></h2>',9)),i("ol",null,[t[6]||(t[6]=e('<li><p>在新服务器中参照 <a href="/wings/1.0/installing">官方安装文档</a> 安装全新的Wings后，按照以下步骤。</p></li><li><p>迁移Wings数据库，将 <code>/var/lib/pterodactyl</code> 中的 wings.db 传到<strong>目标服务器</strong>相同的位置。</p></li><li><p>将守护程序服务器文件、备份等数据一并传到<strong>目标服务器</strong>相同的位置。如果你在创建节点时全部默认并未改变服务器文件存储目录，那只需将 <code>/var/lib/pterodactyl</code> 文件夹传到<strong>目标服务器</strong>就可以结束迁移。<br> 但如果你改过，比如我将所有数据都改到了 <code>/data/pterodactyl</code> 目录下，那你就应该在<strong>第二步</strong>的基础上迁移 <code>/data/pterodactyl</code> 目录。</p></li>',3)),i("li",null,[i("p",null,[t[1]||(t[1]=s("你可以选择将 ")),t[2]||(t[2]=i("code",null,"/etc/pterodactyl/config.yml",-1)),t[3]||(t[3]=s(" 传到")),t[4]||(t[4]=i("strong",null,"目标服务器",-1)),t[5]||(t[5]=s("相同的位置 。也可以选择")),r(n,{to:"/community/config/nodes/add_node.html#%E9%85%8D%E7%BD%AE%E8%8A%82%E7%82%B9"},{default:l(()=>t[0]||(t[0]=[s("进入节点配置页面重新执行自动部署")])),_:1})])])]),t[8]||(t[8]=e(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>对于服务器迁移数据确实是一个头疼的问题，我这推荐一个迁移方案。在<strong>源服务器</strong>上执行以下命令。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsync</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 你需要将 root@192.168.0.10 替换为你的目标服务器 \`用户@ip\`，/data/pterodactyl/ 替换为对应的目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rsync</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --info=progress2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --partial</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/pterodactyl/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@192.168.0.10:/data/pterodactyl/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1))])}const y=a(g,[["render",h],["__file","migrating.html.vue"]]),u=JSON.parse('{"path":"/community/tutorials/migrating.html","title":"服务器间迁移","lang":"zh-CN","frontmatter":{"description":"服务器间迁移 面板迁移 对于面板来说，没有那么多步骤及要求。 按照官方安装文档在新的服务器中安装全新面板后，按照以下步骤。 数据库迁移 你只需要将你源服务器中的 MySQL 数据库导出，导入到目标服务器的数据库中，当然，如果你是外置数据库那就不需要了，具体情况看你。 需要注意的是目标服务器数据库版本要大于等于源服务器的数据库版本。 .env 文件迁移 ...","head":[["meta",{"property":"og:url","content":"https://pterodactyl.top/community/tutorials/migrating.html"}],["meta",{"property":"og:site_name","content":"Pterodactyl-China"}],["meta",{"property":"og:title","content":"服务器间迁移"}],["meta",{"property":"og:description","content":"服务器间迁移 面板迁移 对于面板来说，没有那么多步骤及要求。 按照官方安装文档在新的服务器中安装全新面板后，按照以下步骤。 数据库迁移 你只需要将你源服务器中的 MySQL 数据库导出，导入到目标服务器的数据库中，当然，如果你是外置数据库那就不需要了，具体情况看你。 需要注意的是目标服务器数据库版本要大于等于源服务器的数据库版本。 .env 文件迁移 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-18T15:16:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-18T15:16:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"服务器间迁移\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-18T15:16:26.000Z\\",\\"author\\":[]}"]]},"git":{"createdTime":1714630556000,"updatedTime":1716045386000,"contributors":[{"name":"飒爽师叔","username":"飒爽师叔","email":"43847794+vlssu@users.noreply.github.com","commits":2,"url":"https://github.com/飒爽师叔"}]},"readingTime":{"minutes":1.61,"words":484},"filePathRelative":"community/tutorials/migrating.md","localizedDate":"2024年5月2日","autoDesc":true}');export{y as comp,u as data};
